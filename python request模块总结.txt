python request 模块小结

1、安装方式
pip install requests

2、请求类型

	2.1 基本GET请求（headers参数 和 parmas参数）

		1. 最基本的GET请求可以直接用get方法
		response = requests.get("http://www.baidu.com/")
		response = requests.request("get", "http://www.baidu.com/")
		
		2. 添加 headers 和 查询参数
		headers参数: 增加请求头中的headers信息 
		params 参数: 放在url中传递，可以利用  
		
		实例：
		
			import requests
			 
			kw = {'wd':'长城'}
			 
			headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36"}
			 
			# params 接收一个字典或者字符串的查询参数，字典类型自动转换为url编码，不需要urlencode()
			response = requests.get("http://www.baidu.com/s?", params = kw, headers = headers)
			 
			# 查看响应内容，response.text Requests 会基于 HTTP 响应的文本编码自动解码响应内容 返回的是Unicode格式的数据
			print response.text
			 
			# 查看响应内容，response.content返回的字节流数据， 返回的是服务器响应数据的原始二进制字节流，可以用来保存图片等二进制文件。
			print respones.content
			 
			# 查看完整url地址
			print response.url
			 
			# 查看响应头部字符编码
			print response.encoding
			 
			# 查看响应码
			
	2.2：基本POST请求（data参数）
	
		1. 最基本的GET请求可以直接用post方法
		
			实例：response = requests.post("http://www.baidu.com/", data = data)
			
		2. 传入data数据
		
			import requests
 
			formdata = {
				"type":"AUTO",
				"i":"i love python",
				"doctype":"json",
				"xmlVersion":"1.8",
				"keyfrom":"fanyi.web",
				"ue":"UTF-8",
				"action":"FY_BY_ENTER",
				"typoResult":"true"
			}
			 
			url = "http://fanyi.youdao.com/translate?smartresult=dict&smartresult=rule&smartresult=ugc&sessionFrom=null"
			 
			headers={ "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36"}
			 
			response = requests.post(url, data = formdata, headers = headers)
			 
			print response.text
			 
			# 如果是json文件可以直接显示
			print response.json()


3. web端客户验证

	Web客户端验证，需要添加 auth = (账户名, 密码)
	
	实例：
	
		import requests
 
		auth=('test', '123456')
		 
		response = requests.get('http://192.168.199.107', auth = auth)
		 
		print response.text
		
4、Cookies

	如果一个响应中包含了cookie，可以利用 cookies参数拿到
	
	实例：
	
		import requests
 
		response = requests.get("http://www.baidu.com/")
		 
		# 返回CookieJar对象:
		cookiejar = response.cookies
		 
		# 将CookieJar转为字典：
		cookiedict = requests.utils.dict_from_cookiejar(cookiejar)
		 
		print cookiejar
 



	